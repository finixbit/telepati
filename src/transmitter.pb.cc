// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transmitter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "transmitter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transmitter {

namespace {

const ::google::protobuf::Descriptor* TransmitterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransmitterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserDataMessagesReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserDataMessagesReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProfileRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProfileRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProfileUsersReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProfileUsersReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransmitterReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransmitterReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_transmitter_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_transmitter_2eproto() {
  protobuf_AddDesc_transmitter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "transmitter.proto");
  GOOGLE_CHECK(file != NULL);
  TransmitterRequest_descriptor_ = file->message_type(0);
  static const int TransmitterRequest_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, magicnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, messagedatatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, messagetimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, sendername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, senderkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, recipientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, messagedata_),
  };
  TransmitterRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransmitterRequest_descriptor_,
      TransmitterRequest::default_instance_,
      TransmitterRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransmitterRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterRequest, _is_default_instance_));
  UserDataMessagesReply_descriptor_ = file->message_type(1);
  static const int UserDataMessagesReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDataMessagesReply, messages_),
  };
  UserDataMessagesReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserDataMessagesReply_descriptor_,
      UserDataMessagesReply::default_instance_,
      UserDataMessagesReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserDataMessagesReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDataMessagesReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDataMessagesReply, _is_default_instance_));
  ProfileRequest_descriptor_ = file->message_type(2);
  static const int ProfileRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileRequest, publickey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileRequest, privatekey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileRequest, lasttimestamp_),
  };
  ProfileRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProfileRequest_descriptor_,
      ProfileRequest::default_instance_,
      ProfileRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProfileRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileRequest, _is_default_instance_));
  ProfileUsersReply_descriptor_ = file->message_type(3);
  static const int ProfileUsersReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileUsersReply, users_),
  };
  ProfileUsersReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProfileUsersReply_descriptor_,
      ProfileUsersReply::default_instance_,
      ProfileUsersReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProfileUsersReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileUsersReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileUsersReply, _is_default_instance_));
  TransmitterReply_descriptor_ = file->message_type(4);
  static const int TransmitterReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterReply, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterReply, data_),
  };
  TransmitterReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransmitterReply_descriptor_,
      TransmitterReply::default_instance_,
      TransmitterReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransmitterReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransmitterReply, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_transmitter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransmitterRequest_descriptor_, &TransmitterRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserDataMessagesReply_descriptor_, &UserDataMessagesReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProfileRequest_descriptor_, &ProfileRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProfileUsersReply_descriptor_, &ProfileUsersReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransmitterReply_descriptor_, &TransmitterReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_transmitter_2eproto() {
  delete TransmitterRequest::default_instance_;
  delete TransmitterRequest_reflection_;
  delete UserDataMessagesReply::default_instance_;
  delete UserDataMessagesReply_reflection_;
  delete ProfileRequest::default_instance_;
  delete ProfileRequest_reflection_;
  delete ProfileUsersReply::default_instance_;
  delete ProfileUsersReply_reflection_;
  delete TransmitterReply::default_instance_;
  delete TransmitterReply_reflection_;
}

void protobuf_AddDesc_transmitter_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_transmitter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021transmitter.proto\022\013transmitter\"\327\001\n\022Tra"
    "nsmitterRequest\022\023\n\013magicNumber\030\001 \001(\t\022\021\n\t"
    "messageId\030\002 \001(\t\022\023\n\013messageType\030\003 \001(\t\022\027\n\017"
    "messageDataType\030\004 \001(\t\022\030\n\020messageTimestam"
    "p\030\005 \001(\t\022\022\n\nsenderName\030\006 \001(\t\022\021\n\tsenderKey"
    "\030\007 \001(\t\022\025\n\rrecipientName\030\010 \001(\t\022\023\n\013message"
    "Data\030\t \001(\t\"J\n\025UserDataMessagesReply\0221\n\010m"
    "essages\030\001 \003(\0132\037.transmitter.TransmitterR"
    "equest\"\\\n\016ProfileRequest\022\014\n\004name\030\001 \001(\t\022\021"
    "\n\tpublicKey\030\002 \001(\t\022\022\n\nprivateKey\030\003 \001(\t\022\025\n"
    "\rlastTimestamp\030\004 \001(\t\"\?\n\021ProfileUsersRepl"
    "y\022*\n\005users\030\001 \003(\0132\033.transmitter.ProfileRe"
    "quest\"2\n\020TransmitterReply\022\020\n\010response\030\001 "
    "\001(\010\022\014\n\004data\030\002 \001(\t2\244\005\n\022TransmitterManager"
    "\022O\n\013SendMessage\022\037.transmitter.Transmitte"
    "rRequest\032\035.transmitter.TransmitterReply\""
    "\000\022O\n\013SaveMessage\022\037.transmitter.Transmitt"
    "erRequest\032\035.transmitter.TransmitterReply"
    "\"\000\022N\n\016GetUserProfile\022\033.transmitter.Profi"
    "leRequest\032\035.transmitter.TransmitterReply"
    "\"\000\022N\n\016SetUserProfile\022\033.transmitter.Profi"
    "leRequest\032\035.transmitter.TransmitterReply"
    "\"\000\022O\n\017UserProfilePing\022\033.transmitter.Prof"
    "ileRequest\032\035.transmitter.TransmitterRepl"
    "y\"\000\022P\n\017GetPingMessages\022\033.transmitter.Pro"
    "fileRequest\032\036.transmitter.ProfileUsersRe"
    "ply\"\000\022S\n\017SendDataMessage\022\037.transmitter.T"
    "ransmitterRequest\032\035.transmitter.Transmit"
    "terReply\"\000\022T\n\017GetDataMessages\022\033.transmit"
    "ter.ProfileRequest\032\".transmitter.UserDat"
    "aMessagesReply\"\000b\006proto3", 1224);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "transmitter.proto", &protobuf_RegisterTypes);
  TransmitterRequest::default_instance_ = new TransmitterRequest();
  UserDataMessagesReply::default_instance_ = new UserDataMessagesReply();
  ProfileRequest::default_instance_ = new ProfileRequest();
  ProfileUsersReply::default_instance_ = new ProfileUsersReply();
  TransmitterReply::default_instance_ = new TransmitterReply();
  TransmitterRequest::default_instance_->InitAsDefaultInstance();
  UserDataMessagesReply::default_instance_->InitAsDefaultInstance();
  ProfileRequest::default_instance_->InitAsDefaultInstance();
  ProfileUsersReply::default_instance_->InitAsDefaultInstance();
  TransmitterReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_transmitter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_transmitter_2eproto {
  StaticDescriptorInitializer_transmitter_2eproto() {
    protobuf_AddDesc_transmitter_2eproto();
  }
} static_descriptor_initializer_transmitter_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransmitterRequest::kMagicNumberFieldNumber;
const int TransmitterRequest::kMessageIdFieldNumber;
const int TransmitterRequest::kMessageTypeFieldNumber;
const int TransmitterRequest::kMessageDataTypeFieldNumber;
const int TransmitterRequest::kMessageTimestampFieldNumber;
const int TransmitterRequest::kSenderNameFieldNumber;
const int TransmitterRequest::kSenderKeyFieldNumber;
const int TransmitterRequest::kRecipientNameFieldNumber;
const int TransmitterRequest::kMessageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransmitterRequest::TransmitterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transmitter.TransmitterRequest)
}

void TransmitterRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransmitterRequest::TransmitterRequest(const TransmitterRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transmitter.TransmitterRequest)
}

void TransmitterRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  magicnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messageid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedatatype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetimestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransmitterRequest::~TransmitterRequest() {
  // @@protoc_insertion_point(destructor:transmitter.TransmitterRequest)
  SharedDtor();
}

void TransmitterRequest::SharedDtor() {
  magicnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messageid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedatatype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetimestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransmitterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransmitterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransmitterRequest_descriptor_;
}

const TransmitterRequest& TransmitterRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_transmitter_2eproto();
  return *default_instance_;
}

TransmitterRequest* TransmitterRequest::default_instance_ = NULL;

TransmitterRequest* TransmitterRequest::New(::google::protobuf::Arena* arena) const {
  TransmitterRequest* n = new TransmitterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransmitterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:transmitter.TransmitterRequest)
  magicnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messageid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedatatype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetimestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TransmitterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transmitter.TransmitterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string magicNumber = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_magicnumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->magicnumber().data(), this->magicnumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.magicNumber"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_messageId;
        break;
      }

      // optional string messageId = 2;
      case 2: {
        if (tag == 18) {
         parse_messageId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messageid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messageid().data(), this->messageid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.messageId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_messageType;
        break;
      }

      // optional string messageType = 3;
      case 3: {
        if (tag == 26) {
         parse_messageType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagetype().data(), this->messagetype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.messageType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_messageDataType;
        break;
      }

      // optional string messageDataType = 4;
      case 4: {
        if (tag == 34) {
         parse_messageDataType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagedatatype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagedatatype().data(), this->messagedatatype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.messageDataType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_messageTimestamp;
        break;
      }

      // optional string messageTimestamp = 5;
      case 5: {
        if (tag == 42) {
         parse_messageTimestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagetimestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagetimestamp().data(), this->messagetimestamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.messageTimestamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_senderName;
        break;
      }

      // optional string senderName = 6;
      case 6: {
        if (tag == 50) {
         parse_senderName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendername().data(), this->sendername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.senderName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_senderKey;
        break;
      }

      // optional string senderKey = 7;
      case 7: {
        if (tag == 58) {
         parse_senderKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderkey().data(), this->senderkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.senderKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_recipientName;
        break;
      }

      // optional string recipientName = 8;
      case 8: {
        if (tag == 66) {
         parse_recipientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recipientname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recipientname().data(), this->recipientname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.recipientName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_messageData;
        break;
      }

      // optional string messageData = 9;
      case 9: {
        if (tag == 74) {
         parse_messageData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagedata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagedata().data(), this->messagedata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterRequest.messageData"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transmitter.TransmitterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transmitter.TransmitterRequest)
  return false;
#undef DO_
}

void TransmitterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transmitter.TransmitterRequest)
  // optional string magicNumber = 1;
  if (this->magicnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->magicnumber().data(), this->magicnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.magicNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->magicnumber(), output);
  }

  // optional string messageId = 2;
  if (this->messageid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->messageid(), output);
  }

  // optional string messageType = 3;
  if (this->messagetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagetype().data(), this->messagetype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->messagetype(), output);
  }

  // optional string messageDataType = 4;
  if (this->messagedatatype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagedatatype().data(), this->messagedatatype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageDataType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->messagedatatype(), output);
  }

  // optional string messageTimestamp = 5;
  if (this->messagetimestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagetimestamp().data(), this->messagetimestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageTimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->messagetimestamp(), output);
  }

  // optional string senderName = 6;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), this->sendername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.senderName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sendername(), output);
  }

  // optional string senderKey = 7;
  if (this->senderkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderkey().data(), this->senderkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.senderKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->senderkey(), output);
  }

  // optional string recipientName = 8;
  if (this->recipientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recipientname().data(), this->recipientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.recipientName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->recipientname(), output);
  }

  // optional string messageData = 9;
  if (this->messagedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagedata().data(), this->messagedata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->messagedata(), output);
  }

  // @@protoc_insertion_point(serialize_end:transmitter.TransmitterRequest)
}

::google::protobuf::uint8* TransmitterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmitter.TransmitterRequest)
  // optional string magicNumber = 1;
  if (this->magicnumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->magicnumber().data(), this->magicnumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.magicNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->magicnumber(), target);
  }

  // optional string messageId = 2;
  if (this->messageid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->messageid(), target);
  }

  // optional string messageType = 3;
  if (this->messagetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagetype().data(), this->messagetype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->messagetype(), target);
  }

  // optional string messageDataType = 4;
  if (this->messagedatatype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagedatatype().data(), this->messagedatatype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageDataType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->messagedatatype(), target);
  }

  // optional string messageTimestamp = 5;
  if (this->messagetimestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagetimestamp().data(), this->messagetimestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageTimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->messagetimestamp(), target);
  }

  // optional string senderName = 6;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), this->sendername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.senderName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sendername(), target);
  }

  // optional string senderKey = 7;
  if (this->senderkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderkey().data(), this->senderkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.senderKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->senderkey(), target);
  }

  // optional string recipientName = 8;
  if (this->recipientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recipientname().data(), this->recipientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.recipientName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->recipientname(), target);
  }

  // optional string messageData = 9;
  if (this->messagedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagedata().data(), this->messagedata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterRequest.messageData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->messagedata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:transmitter.TransmitterRequest)
  return target;
}

int TransmitterRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:transmitter.TransmitterRequest)
  int total_size = 0;

  // optional string magicNumber = 1;
  if (this->magicnumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->magicnumber());
  }

  // optional string messageId = 2;
  if (this->messageid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messageid());
  }

  // optional string messageType = 3;
  if (this->messagetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagetype());
  }

  // optional string messageDataType = 4;
  if (this->messagedatatype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagedatatype());
  }

  // optional string messageTimestamp = 5;
  if (this->messagetimestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagetimestamp());
  }

  // optional string senderName = 6;
  if (this->sendername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendername());
  }

  // optional string senderKey = 7;
  if (this->senderkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderkey());
  }

  // optional string recipientName = 8;
  if (this->recipientname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recipientname());
  }

  // optional string messageData = 9;
  if (this->messagedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagedata());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransmitterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transmitter.TransmitterRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransmitterRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransmitterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transmitter.TransmitterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transmitter.TransmitterRequest)
    MergeFrom(*source);
  }
}

void TransmitterRequest::MergeFrom(const TransmitterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transmitter.TransmitterRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.magicnumber().size() > 0) {

    magicnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.magicnumber_);
  }
  if (from.messageid().size() > 0) {

    messageid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messageid_);
  }
  if (from.messagetype().size() > 0) {

    messagetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagetype_);
  }
  if (from.messagedatatype().size() > 0) {

    messagedatatype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagedatatype_);
  }
  if (from.messagetimestamp().size() > 0) {

    messagetimestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagetimestamp_);
  }
  if (from.sendername().size() > 0) {

    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
  if (from.senderkey().size() > 0) {

    senderkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderkey_);
  }
  if (from.recipientname().size() > 0) {

    recipientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recipientname_);
  }
  if (from.messagedata().size() > 0) {

    messagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagedata_);
  }
}

void TransmitterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transmitter.TransmitterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransmitterRequest::CopyFrom(const TransmitterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmitter.TransmitterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransmitterRequest::IsInitialized() const {

  return true;
}

void TransmitterRequest::Swap(TransmitterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransmitterRequest::InternalSwap(TransmitterRequest* other) {
  magicnumber_.Swap(&other->magicnumber_);
  messageid_.Swap(&other->messageid_);
  messagetype_.Swap(&other->messagetype_);
  messagedatatype_.Swap(&other->messagedatatype_);
  messagetimestamp_.Swap(&other->messagetimestamp_);
  sendername_.Swap(&other->sendername_);
  senderkey_.Swap(&other->senderkey_);
  recipientname_.Swap(&other->recipientname_);
  messagedata_.Swap(&other->messagedata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransmitterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransmitterRequest_descriptor_;
  metadata.reflection = TransmitterRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransmitterRequest

// optional string magicNumber = 1;
void TransmitterRequest::clear_magicnumber() {
  magicnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::magicnumber() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.magicNumber)
  return magicnumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_magicnumber(const ::std::string& value) {
  
  magicnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.magicNumber)
}
 void TransmitterRequest::set_magicnumber(const char* value) {
  
  magicnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.magicNumber)
}
 void TransmitterRequest::set_magicnumber(const char* value, size_t size) {
  
  magicnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.magicNumber)
}
 ::std::string* TransmitterRequest::mutable_magicnumber() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.magicNumber)
  return magicnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_magicnumber() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.magicNumber)
  
  return magicnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_magicnumber(::std::string* magicnumber) {
  if (magicnumber != NULL) {
    
  } else {
    
  }
  magicnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magicnumber);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.magicNumber)
}

// optional string messageId = 2;
void TransmitterRequest::clear_messageid() {
  messageid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::messageid() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.messageId)
  return messageid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_messageid(const ::std::string& value) {
  
  messageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.messageId)
}
 void TransmitterRequest::set_messageid(const char* value) {
  
  messageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.messageId)
}
 void TransmitterRequest::set_messageid(const char* value, size_t size) {
  
  messageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.messageId)
}
 ::std::string* TransmitterRequest::mutable_messageid() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.messageId)
  return messageid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_messageid() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.messageId)
  
  return messageid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_messageid(::std::string* messageid) {
  if (messageid != NULL) {
    
  } else {
    
  }
  messageid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messageid);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.messageId)
}

// optional string messageType = 3;
void TransmitterRequest::clear_messagetype() {
  messagetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::messagetype() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.messageType)
  return messagetype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_messagetype(const ::std::string& value) {
  
  messagetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.messageType)
}
 void TransmitterRequest::set_messagetype(const char* value) {
  
  messagetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.messageType)
}
 void TransmitterRequest::set_messagetype(const char* value, size_t size) {
  
  messagetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.messageType)
}
 ::std::string* TransmitterRequest::mutable_messagetype() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.messageType)
  return messagetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_messagetype() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.messageType)
  
  return messagetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_messagetype(::std::string* messagetype) {
  if (messagetype != NULL) {
    
  } else {
    
  }
  messagetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagetype);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.messageType)
}

// optional string messageDataType = 4;
void TransmitterRequest::clear_messagedatatype() {
  messagedatatype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::messagedatatype() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.messageDataType)
  return messagedatatype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_messagedatatype(const ::std::string& value) {
  
  messagedatatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.messageDataType)
}
 void TransmitterRequest::set_messagedatatype(const char* value) {
  
  messagedatatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.messageDataType)
}
 void TransmitterRequest::set_messagedatatype(const char* value, size_t size) {
  
  messagedatatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.messageDataType)
}
 ::std::string* TransmitterRequest::mutable_messagedatatype() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.messageDataType)
  return messagedatatype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_messagedatatype() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.messageDataType)
  
  return messagedatatype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_messagedatatype(::std::string* messagedatatype) {
  if (messagedatatype != NULL) {
    
  } else {
    
  }
  messagedatatype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagedatatype);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.messageDataType)
}

// optional string messageTimestamp = 5;
void TransmitterRequest::clear_messagetimestamp() {
  messagetimestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::messagetimestamp() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.messageTimestamp)
  return messagetimestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_messagetimestamp(const ::std::string& value) {
  
  messagetimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.messageTimestamp)
}
 void TransmitterRequest::set_messagetimestamp(const char* value) {
  
  messagetimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.messageTimestamp)
}
 void TransmitterRequest::set_messagetimestamp(const char* value, size_t size) {
  
  messagetimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.messageTimestamp)
}
 ::std::string* TransmitterRequest::mutable_messagetimestamp() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.messageTimestamp)
  return messagetimestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_messagetimestamp() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.messageTimestamp)
  
  return messagetimestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_messagetimestamp(::std::string* messagetimestamp) {
  if (messagetimestamp != NULL) {
    
  } else {
    
  }
  messagetimestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagetimestamp);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.messageTimestamp)
}

// optional string senderName = 6;
void TransmitterRequest::clear_sendername() {
  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::sendername() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.senderName)
  return sendername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_sendername(const ::std::string& value) {
  
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.senderName)
}
 void TransmitterRequest::set_sendername(const char* value) {
  
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.senderName)
}
 void TransmitterRequest::set_sendername(const char* value, size_t size) {
  
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.senderName)
}
 ::std::string* TransmitterRequest::mutable_sendername() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.senderName)
  return sendername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_sendername() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.senderName)
  
  return sendername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_sendername(::std::string* sendername) {
  if (sendername != NULL) {
    
  } else {
    
  }
  sendername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendername);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.senderName)
}

// optional string senderKey = 7;
void TransmitterRequest::clear_senderkey() {
  senderkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::senderkey() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.senderKey)
  return senderkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_senderkey(const ::std::string& value) {
  
  senderkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.senderKey)
}
 void TransmitterRequest::set_senderkey(const char* value) {
  
  senderkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.senderKey)
}
 void TransmitterRequest::set_senderkey(const char* value, size_t size) {
  
  senderkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.senderKey)
}
 ::std::string* TransmitterRequest::mutable_senderkey() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.senderKey)
  return senderkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_senderkey() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.senderKey)
  
  return senderkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_senderkey(::std::string* senderkey) {
  if (senderkey != NULL) {
    
  } else {
    
  }
  senderkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senderkey);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.senderKey)
}

// optional string recipientName = 8;
void TransmitterRequest::clear_recipientname() {
  recipientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::recipientname() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.recipientName)
  return recipientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_recipientname(const ::std::string& value) {
  
  recipientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.recipientName)
}
 void TransmitterRequest::set_recipientname(const char* value) {
  
  recipientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.recipientName)
}
 void TransmitterRequest::set_recipientname(const char* value, size_t size) {
  
  recipientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.recipientName)
}
 ::std::string* TransmitterRequest::mutable_recipientname() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.recipientName)
  return recipientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_recipientname() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.recipientName)
  
  return recipientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_recipientname(::std::string* recipientname) {
  if (recipientname != NULL) {
    
  } else {
    
  }
  recipientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipientname);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.recipientName)
}

// optional string messageData = 9;
void TransmitterRequest::clear_messagedata() {
  messagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterRequest::messagedata() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterRequest.messageData)
  return messagedata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_messagedata(const ::std::string& value) {
  
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterRequest.messageData)
}
 void TransmitterRequest::set_messagedata(const char* value) {
  
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterRequest.messageData)
}
 void TransmitterRequest::set_messagedata(const char* value, size_t size) {
  
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterRequest.messageData)
}
 ::std::string* TransmitterRequest::mutable_messagedata() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterRequest.messageData)
  return messagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterRequest::release_messagedata() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterRequest.messageData)
  
  return messagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterRequest::set_allocated_messagedata(::std::string* messagedata) {
  if (messagedata != NULL) {
    
  } else {
    
  }
  messagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagedata);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterRequest.messageData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDataMessagesReply::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDataMessagesReply::UserDataMessagesReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transmitter.UserDataMessagesReply)
}

void UserDataMessagesReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserDataMessagesReply::UserDataMessagesReply(const UserDataMessagesReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transmitter.UserDataMessagesReply)
}

void UserDataMessagesReply::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UserDataMessagesReply::~UserDataMessagesReply() {
  // @@protoc_insertion_point(destructor:transmitter.UserDataMessagesReply)
  SharedDtor();
}

void UserDataMessagesReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserDataMessagesReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserDataMessagesReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserDataMessagesReply_descriptor_;
}

const UserDataMessagesReply& UserDataMessagesReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_transmitter_2eproto();
  return *default_instance_;
}

UserDataMessagesReply* UserDataMessagesReply::default_instance_ = NULL;

UserDataMessagesReply* UserDataMessagesReply::New(::google::protobuf::Arena* arena) const {
  UserDataMessagesReply* n = new UserDataMessagesReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserDataMessagesReply::Clear() {
// @@protoc_insertion_point(message_clear_start:transmitter.UserDataMessagesReply)
  messages_.Clear();
}

bool UserDataMessagesReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transmitter.UserDataMessagesReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .transmitter.TransmitterRequest messages = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_messages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_messages;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transmitter.UserDataMessagesReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transmitter.UserDataMessagesReply)
  return false;
#undef DO_
}

void UserDataMessagesReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transmitter.UserDataMessagesReply)
  // repeated .transmitter.TransmitterRequest messages = 1;
  for (unsigned int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->messages(i), output);
  }

  // @@protoc_insertion_point(serialize_end:transmitter.UserDataMessagesReply)
}

::google::protobuf::uint8* UserDataMessagesReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmitter.UserDataMessagesReply)
  // repeated .transmitter.TransmitterRequest messages = 1;
  for (unsigned int i = 0, n = this->messages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->messages(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:transmitter.UserDataMessagesReply)
  return target;
}

int UserDataMessagesReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:transmitter.UserDataMessagesReply)
  int total_size = 0;

  // repeated .transmitter.TransmitterRequest messages = 1;
  total_size += 1 * this->messages_size();
  for (int i = 0; i < this->messages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->messages(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserDataMessagesReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transmitter.UserDataMessagesReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserDataMessagesReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDataMessagesReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transmitter.UserDataMessagesReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transmitter.UserDataMessagesReply)
    MergeFrom(*source);
  }
}

void UserDataMessagesReply::MergeFrom(const UserDataMessagesReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transmitter.UserDataMessagesReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  messages_.MergeFrom(from.messages_);
}

void UserDataMessagesReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transmitter.UserDataMessagesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDataMessagesReply::CopyFrom(const UserDataMessagesReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmitter.UserDataMessagesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDataMessagesReply::IsInitialized() const {

  return true;
}

void UserDataMessagesReply::Swap(UserDataMessagesReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserDataMessagesReply::InternalSwap(UserDataMessagesReply* other) {
  messages_.UnsafeArenaSwap(&other->messages_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserDataMessagesReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserDataMessagesReply_descriptor_;
  metadata.reflection = UserDataMessagesReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserDataMessagesReply

// repeated .transmitter.TransmitterRequest messages = 1;
int UserDataMessagesReply::messages_size() const {
  return messages_.size();
}
void UserDataMessagesReply::clear_messages() {
  messages_.Clear();
}
const ::transmitter::TransmitterRequest& UserDataMessagesReply::messages(int index) const {
  // @@protoc_insertion_point(field_get:transmitter.UserDataMessagesReply.messages)
  return messages_.Get(index);
}
::transmitter::TransmitterRequest* UserDataMessagesReply::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:transmitter.UserDataMessagesReply.messages)
  return messages_.Mutable(index);
}
::transmitter::TransmitterRequest* UserDataMessagesReply::add_messages() {
  // @@protoc_insertion_point(field_add:transmitter.UserDataMessagesReply.messages)
  return messages_.Add();
}
::google::protobuf::RepeatedPtrField< ::transmitter::TransmitterRequest >*
UserDataMessagesReply::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:transmitter.UserDataMessagesReply.messages)
  return &messages_;
}
const ::google::protobuf::RepeatedPtrField< ::transmitter::TransmitterRequest >&
UserDataMessagesReply::messages() const {
  // @@protoc_insertion_point(field_list:transmitter.UserDataMessagesReply.messages)
  return messages_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileRequest::kNameFieldNumber;
const int ProfileRequest::kPublicKeyFieldNumber;
const int ProfileRequest::kPrivateKeyFieldNumber;
const int ProfileRequest::kLastTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileRequest::ProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transmitter.ProfileRequest)
}

void ProfileRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProfileRequest::ProfileRequest(const ProfileRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transmitter.ProfileRequest)
}

void ProfileRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lasttimestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProfileRequest::~ProfileRequest() {
  // @@protoc_insertion_point(destructor:transmitter.ProfileRequest)
  SharedDtor();
}

void ProfileRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatekey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lasttimestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ProfileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfileRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProfileRequest_descriptor_;
}

const ProfileRequest& ProfileRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_transmitter_2eproto();
  return *default_instance_;
}

ProfileRequest* ProfileRequest::default_instance_ = NULL;

ProfileRequest* ProfileRequest::New(::google::protobuf::Arena* arena) const {
  ProfileRequest* n = new ProfileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:transmitter.ProfileRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lasttimestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transmitter.ProfileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.ProfileRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_publicKey;
        break;
      }

      // optional string publicKey = 2;
      case 2: {
        if (tag == 18) {
         parse_publicKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publickey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publickey().data(), this->publickey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.ProfileRequest.publicKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_privateKey;
        break;
      }

      // optional string privateKey = 3;
      case 3: {
        if (tag == 26) {
         parse_privateKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_privatekey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->privatekey().data(), this->privatekey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.ProfileRequest.privateKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_lastTimestamp;
        break;
      }

      // optional string lastTimestamp = 4;
      case 4: {
        if (tag == 34) {
         parse_lastTimestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lasttimestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lasttimestamp().data(), this->lasttimestamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.ProfileRequest.lastTimestamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transmitter.ProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transmitter.ProfileRequest)
  return false;
#undef DO_
}

void ProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transmitter.ProfileRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string publicKey = 2;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publickey().data(), this->publickey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.publicKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->publickey(), output);
  }

  // optional string privateKey = 3;
  if (this->privatekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privatekey().data(), this->privatekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.privateKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->privatekey(), output);
  }

  // optional string lastTimestamp = 4;
  if (this->lasttimestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lasttimestamp().data(), this->lasttimestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.lastTimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lasttimestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:transmitter.ProfileRequest)
}

::google::protobuf::uint8* ProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmitter.ProfileRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string publicKey = 2;
  if (this->publickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publickey().data(), this->publickey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.publicKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->publickey(), target);
  }

  // optional string privateKey = 3;
  if (this->privatekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privatekey().data(), this->privatekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.privateKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->privatekey(), target);
  }

  // optional string lastTimestamp = 4;
  if (this->lasttimestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lasttimestamp().data(), this->lasttimestamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.ProfileRequest.lastTimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lasttimestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:transmitter.ProfileRequest)
  return target;
}

int ProfileRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:transmitter.ProfileRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string publicKey = 2;
  if (this->publickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publickey());
  }

  // optional string privateKey = 3;
  if (this->privatekey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->privatekey());
  }

  // optional string lastTimestamp = 4;
  if (this->lasttimestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lasttimestamp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transmitter.ProfileRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProfileRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transmitter.ProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transmitter.ProfileRequest)
    MergeFrom(*source);
  }
}

void ProfileRequest::MergeFrom(const ProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transmitter.ProfileRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.publickey().size() > 0) {

    publickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publickey_);
  }
  if (from.privatekey().size() > 0) {

    privatekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privatekey_);
  }
  if (from.lasttimestamp().size() > 0) {

    lasttimestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lasttimestamp_);
  }
}

void ProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transmitter.ProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileRequest::CopyFrom(const ProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmitter.ProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileRequest::IsInitialized() const {

  return true;
}

void ProfileRequest::Swap(ProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileRequest::InternalSwap(ProfileRequest* other) {
  name_.Swap(&other->name_);
  publickey_.Swap(&other->publickey_);
  privatekey_.Swap(&other->privatekey_);
  lasttimestamp_.Swap(&other->lasttimestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfileRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProfileRequest_descriptor_;
  metadata.reflection = ProfileRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfileRequest

// optional string name = 1;
void ProfileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProfileRequest::name() const {
  // @@protoc_insertion_point(field_get:transmitter.ProfileRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.ProfileRequest.name)
}
 void ProfileRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.ProfileRequest.name)
}
 void ProfileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.ProfileRequest.name)
}
 ::std::string* ProfileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.ProfileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProfileRequest::release_name() {
  // @@protoc_insertion_point(field_release:transmitter.ProfileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:transmitter.ProfileRequest.name)
}

// optional string publicKey = 2;
void ProfileRequest::clear_publickey() {
  publickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProfileRequest::publickey() const {
  // @@protoc_insertion_point(field_get:transmitter.ProfileRequest.publicKey)
  return publickey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_publickey(const ::std::string& value) {
  
  publickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.ProfileRequest.publicKey)
}
 void ProfileRequest::set_publickey(const char* value) {
  
  publickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.ProfileRequest.publicKey)
}
 void ProfileRequest::set_publickey(const char* value, size_t size) {
  
  publickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.ProfileRequest.publicKey)
}
 ::std::string* ProfileRequest::mutable_publickey() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.ProfileRequest.publicKey)
  return publickey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProfileRequest::release_publickey() {
  // @@protoc_insertion_point(field_release:transmitter.ProfileRequest.publicKey)
  
  return publickey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_allocated_publickey(::std::string* publickey) {
  if (publickey != NULL) {
    
  } else {
    
  }
  publickey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publickey);
  // @@protoc_insertion_point(field_set_allocated:transmitter.ProfileRequest.publicKey)
}

// optional string privateKey = 3;
void ProfileRequest::clear_privatekey() {
  privatekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProfileRequest::privatekey() const {
  // @@protoc_insertion_point(field_get:transmitter.ProfileRequest.privateKey)
  return privatekey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_privatekey(const ::std::string& value) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.ProfileRequest.privateKey)
}
 void ProfileRequest::set_privatekey(const char* value) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.ProfileRequest.privateKey)
}
 void ProfileRequest::set_privatekey(const char* value, size_t size) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.ProfileRequest.privateKey)
}
 ::std::string* ProfileRequest::mutable_privatekey() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.ProfileRequest.privateKey)
  return privatekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProfileRequest::release_privatekey() {
  // @@protoc_insertion_point(field_release:transmitter.ProfileRequest.privateKey)
  
  return privatekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_allocated_privatekey(::std::string* privatekey) {
  if (privatekey != NULL) {
    
  } else {
    
  }
  privatekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privatekey);
  // @@protoc_insertion_point(field_set_allocated:transmitter.ProfileRequest.privateKey)
}

// optional string lastTimestamp = 4;
void ProfileRequest::clear_lasttimestamp() {
  lasttimestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProfileRequest::lasttimestamp() const {
  // @@protoc_insertion_point(field_get:transmitter.ProfileRequest.lastTimestamp)
  return lasttimestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_lasttimestamp(const ::std::string& value) {
  
  lasttimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.ProfileRequest.lastTimestamp)
}
 void ProfileRequest::set_lasttimestamp(const char* value) {
  
  lasttimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.ProfileRequest.lastTimestamp)
}
 void ProfileRequest::set_lasttimestamp(const char* value, size_t size) {
  
  lasttimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.ProfileRequest.lastTimestamp)
}
 ::std::string* ProfileRequest::mutable_lasttimestamp() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.ProfileRequest.lastTimestamp)
  return lasttimestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProfileRequest::release_lasttimestamp() {
  // @@protoc_insertion_point(field_release:transmitter.ProfileRequest.lastTimestamp)
  
  return lasttimestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProfileRequest::set_allocated_lasttimestamp(::std::string* lasttimestamp) {
  if (lasttimestamp != NULL) {
    
  } else {
    
  }
  lasttimestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lasttimestamp);
  // @@protoc_insertion_point(field_set_allocated:transmitter.ProfileRequest.lastTimestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileUsersReply::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileUsersReply::ProfileUsersReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transmitter.ProfileUsersReply)
}

void ProfileUsersReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProfileUsersReply::ProfileUsersReply(const ProfileUsersReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transmitter.ProfileUsersReply)
}

void ProfileUsersReply::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ProfileUsersReply::~ProfileUsersReply() {
  // @@protoc_insertion_point(destructor:transmitter.ProfileUsersReply)
  SharedDtor();
}

void ProfileUsersReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProfileUsersReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfileUsersReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProfileUsersReply_descriptor_;
}

const ProfileUsersReply& ProfileUsersReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_transmitter_2eproto();
  return *default_instance_;
}

ProfileUsersReply* ProfileUsersReply::default_instance_ = NULL;

ProfileUsersReply* ProfileUsersReply::New(::google::protobuf::Arena* arena) const {
  ProfileUsersReply* n = new ProfileUsersReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfileUsersReply::Clear() {
// @@protoc_insertion_point(message_clear_start:transmitter.ProfileUsersReply)
  users_.Clear();
}

bool ProfileUsersReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transmitter.ProfileUsersReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .transmitter.ProfileRequest users = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_users:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_users;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transmitter.ProfileUsersReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transmitter.ProfileUsersReply)
  return false;
#undef DO_
}

void ProfileUsersReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transmitter.ProfileUsersReply)
  // repeated .transmitter.ProfileRequest users = 1;
  for (unsigned int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->users(i), output);
  }

  // @@protoc_insertion_point(serialize_end:transmitter.ProfileUsersReply)
}

::google::protobuf::uint8* ProfileUsersReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmitter.ProfileUsersReply)
  // repeated .transmitter.ProfileRequest users = 1;
  for (unsigned int i = 0, n = this->users_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->users(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:transmitter.ProfileUsersReply)
  return target;
}

int ProfileUsersReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:transmitter.ProfileUsersReply)
  int total_size = 0;

  // repeated .transmitter.ProfileRequest users = 1;
  total_size += 1 * this->users_size();
  for (int i = 0; i < this->users_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->users(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfileUsersReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transmitter.ProfileUsersReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProfileUsersReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileUsersReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transmitter.ProfileUsersReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transmitter.ProfileUsersReply)
    MergeFrom(*source);
  }
}

void ProfileUsersReply::MergeFrom(const ProfileUsersReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transmitter.ProfileUsersReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  users_.MergeFrom(from.users_);
}

void ProfileUsersReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transmitter.ProfileUsersReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileUsersReply::CopyFrom(const ProfileUsersReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmitter.ProfileUsersReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileUsersReply::IsInitialized() const {

  return true;
}

void ProfileUsersReply::Swap(ProfileUsersReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileUsersReply::InternalSwap(ProfileUsersReply* other) {
  users_.UnsafeArenaSwap(&other->users_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfileUsersReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProfileUsersReply_descriptor_;
  metadata.reflection = ProfileUsersReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfileUsersReply

// repeated .transmitter.ProfileRequest users = 1;
int ProfileUsersReply::users_size() const {
  return users_.size();
}
void ProfileUsersReply::clear_users() {
  users_.Clear();
}
const ::transmitter::ProfileRequest& ProfileUsersReply::users(int index) const {
  // @@protoc_insertion_point(field_get:transmitter.ProfileUsersReply.users)
  return users_.Get(index);
}
::transmitter::ProfileRequest* ProfileUsersReply::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:transmitter.ProfileUsersReply.users)
  return users_.Mutable(index);
}
::transmitter::ProfileRequest* ProfileUsersReply::add_users() {
  // @@protoc_insertion_point(field_add:transmitter.ProfileUsersReply.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::transmitter::ProfileRequest >*
ProfileUsersReply::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:transmitter.ProfileUsersReply.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::transmitter::ProfileRequest >&
ProfileUsersReply::users() const {
  // @@protoc_insertion_point(field_list:transmitter.ProfileUsersReply.users)
  return users_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransmitterReply::kResponseFieldNumber;
const int TransmitterReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransmitterReply::TransmitterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:transmitter.TransmitterReply)
}

void TransmitterReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransmitterReply::TransmitterReply(const TransmitterReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:transmitter.TransmitterReply)
}

void TransmitterReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  response_ = false;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransmitterReply::~TransmitterReply() {
  // @@protoc_insertion_point(destructor:transmitter.TransmitterReply)
  SharedDtor();
}

void TransmitterReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransmitterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransmitterReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransmitterReply_descriptor_;
}

const TransmitterReply& TransmitterReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_transmitter_2eproto();
  return *default_instance_;
}

TransmitterReply* TransmitterReply::default_instance_ = NULL;

TransmitterReply* TransmitterReply::New(::google::protobuf::Arena* arena) const {
  TransmitterReply* n = new TransmitterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransmitterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:transmitter.TransmitterReply)
  response_ = false;
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TransmitterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transmitter.TransmitterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool response = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "transmitter.TransmitterReply.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transmitter.TransmitterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transmitter.TransmitterReply)
  return false;
#undef DO_
}

void TransmitterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transmitter.TransmitterReply)
  // optional bool response = 1;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->response(), output);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:transmitter.TransmitterReply)
}

::google::protobuf::uint8* TransmitterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmitter.TransmitterReply)
  // optional bool response = 1;
  if (this->response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->response(), target);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "transmitter.TransmitterReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:transmitter.TransmitterReply)
  return target;
}

int TransmitterReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:transmitter.TransmitterReply)
  int total_size = 0;

  // optional bool response = 1;
  if (this->response() != 0) {
    total_size += 1 + 1;
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransmitterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transmitter.TransmitterReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransmitterReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransmitterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transmitter.TransmitterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transmitter.TransmitterReply)
    MergeFrom(*source);
  }
}

void TransmitterReply::MergeFrom(const TransmitterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transmitter.TransmitterReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TransmitterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transmitter.TransmitterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransmitterReply::CopyFrom(const TransmitterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmitter.TransmitterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransmitterReply::IsInitialized() const {

  return true;
}

void TransmitterReply::Swap(TransmitterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransmitterReply::InternalSwap(TransmitterReply* other) {
  std::swap(response_, other->response_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransmitterReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransmitterReply_descriptor_;
  metadata.reflection = TransmitterReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransmitterReply

// optional bool response = 1;
void TransmitterReply::clear_response() {
  response_ = false;
}
 bool TransmitterReply::response() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterReply.response)
  return response_;
}
 void TransmitterReply::set_response(bool value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:transmitter.TransmitterReply.response)
}

// optional string data = 2;
void TransmitterReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransmitterReply::data() const {
  // @@protoc_insertion_point(field_get:transmitter.TransmitterReply.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transmitter.TransmitterReply.data)
}
 void TransmitterReply::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transmitter.TransmitterReply.data)
}
 void TransmitterReply::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transmitter.TransmitterReply.data)
}
 ::std::string* TransmitterReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:transmitter.TransmitterReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransmitterReply::release_data() {
  // @@protoc_insertion_point(field_release:transmitter.TransmitterReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransmitterReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:transmitter.TransmitterReply.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace transmitter

// @@protoc_insertion_point(global_scope)
